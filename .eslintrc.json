{
  "root": true,
  "ignorePatterns": [
    "app/**/*", // ignore nodeJs files
    "dist/**/*",
    "release/**/*"
  ],
  "overrides": [
    {
      "files": [
        "*.ts"
      ],
      "parserOptions": {
        "project": [
          "./tsconfig.serve.json",
          "./tsconfig.app.json",
          "./tsconfig.spec.json",
          "./e2e/tsconfig.e2e.json"
        ],
        "createDefaultProgram": true
      },
      "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates"
      ],
      "rules": {
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "prefix": "app",
            "style": "kebab-case"
          }
        ],
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": "app",
            "style": "camelCase"
          }
        ],


// TODO: these are in the "recommended-requiring-type-checking" template but might be a bit too severe
        "no-implied-eval": "off",
        "require-await": "off",
        "@typescript-eslint/await-thenable": "error",
        "@typescript-eslint/no-floating-promises": "error",
        "@typescript-eslint/no-for-in-array": "error",
        "@typescript-eslint/no-implied-eval": "error",
        "@typescript-eslint/no-misused-promises": "error",
        "@typescript-eslint/no-unnecessary-type-assertion": "error",
        // "@typescript-eslint/no-unsafe-assignment": "error",
        // "@typescript-eslint/no-unsafe-call": "error",
        // "@typescript-eslint/no-unsafe-member-access": "error",
        "@typescript-eslint/no-unsafe-return": "error",
        "@typescript-eslint/prefer-regexp-exec": "error",
        "@typescript-eslint/require-await": "error",
        "@typescript-eslint/restrict-plus-operands": "error",
        "@typescript-eslint/restrict-template-expressions": "error",
        "@typescript-eslint/unbound-method": "error",





        // "@typescript-eslint/ban-ts-comment": "error",
        // "@typescript-eslint/comma-dangle": "warn",
        // "@typescript-eslint/explicit-function-return-type": [
        //   "error"
        // ],
        // "@typescript-eslint/consistent-type-definitions": "error",
        // "@typescript-eslint/dot-notation": "off",
        "@typescript-eslint/explicit-member-accessibility": [
          "error",
          {
            "accessibility": "explicit",
            "overrides": {
              "accessors": "explicit",
              "constructors": "no-public"
            }
          }
        ],
        "@typescript-eslint/naming-convention": [
          "warn",
          {
            "selector": "enumMember",
            "format": [
              "StrictPascalCase"
            ]
          }
        ],
        // "@typescript-eslint/no-confusing-non-null-assertion": "warn",
        // "@typescript-eslint/no-empty-interface": "error",
        "@typescript-eslint/no-explicit-any": "off",
        // "@typescript-eslint/no-extra-non-null-assertion": "error",
        // "@typescript-eslint/no-extraneous-class": [
        //   "error",
        //   {
        //     "allowConstructorOnly": true,
        //     "allowWithDecorator": true
        //   }
        // ],
        "@typescript-eslint/no-inferrable-types": [
          "off"
          // {
          //   "ignoreParameters": true
          // }
        ],
        "@typescript-eslint/no-magic-numbers": [
          "warn",
          {
            "ignore": [ 0, 1 ],
            "ignoreEnums": true,
            "ignoreReadonlyClassProperties": true
          }
        ],
        // "@typescript-eslint/no-shadow": [
        //   "error",
        //   {
        //     "ignoreTypeValueShadow": true
        //   }
        // ],
        // "@typescript-eslint/no-useless-constructor": "warn",
        "@typescript-eslint/prefer-for-of": "warn",
        "@typescript-eslint/semi": [
          "error",
          "always",
          {
            "omitLastInOneLineBlock": true
          }
        ],
        "@typescript-eslint/typedef": [
          "error",
          {
            // "arrowParameter": true,
            "variableDeclaration": true
          }
        ],
        // "prefer-arrow/prefer-arrow-functions": [
        //   "warn",
        //   {
        //     "singleReturnOnly": true,
        //     "allowStandaloneDeclarations": true
        //   }
        // ],
        "arrow-body-style": "off",
        "arrow-parens": [
          "off",
          "always"
        ],
        "brace-style": [
          "error",
          "1tbs",
          {
            "allowSingleLine": true
          }
        ],
        // "comma-dangle": "off",  // Disabled in favour of @typescript-eslint/comma-dangle
        // "import/order": [
        //   "warn",
        //   {
        //     "alphabetize": {
        //       "order": "asc",
        //       "caseInsensitive": true
        //     },
        //     "groups": [
        //       "builtin",
        //       "external",
        //       "internal"
        //       // "index",
        //       // "sibling",
        //       // "parent",
        //       // "object"
        //     ]
        //   }
        // ],
        // "max-classes-per-file": [
        //   "error",
        //   1
        // ],
        // "max-len": [
        //   "warn",
        //   {
        //     "code": 140,
        //     "ignoreComments": true,
        //     "ignorePattern": "^import ",
        //     "ignoreStrings": true,
        //     "ignoreTemplateLiterals": true
        //   }
        // ],
        // "no-console": [
        //   "warn",
        //   {
        //     // Need to override 'allow' option with at least one entry, otherwise rule
        //     // is ignored for some reason.
        //     "allow": [
        //       "clear"
        //     ]
        //   }
        // ],
        // "no-extra-bind": "error",
        // //"no-implied-eval": "off",  // Disabled in favour of @typescript-eslint/no-implied-eval
        // "no-magic-numbers": "off",  // Disabled in favour of @typescript-eslint/no-magic-numbers
        // "no-multiple-empty-lines": "error",
        // "no-new-func": "error",
        // "no-restricted-syntax": [
        //   "error",
        //   "ForInStatement"
        // ],
        // "no-return-await": "error",
        // "no-sequences": "error",
        // //"no-shadow": "off",
        // "no-underscore-dangle": "off",
        // "no-useless-constructor": "off",  // Disabled in favour of @typescript-eslint/no-useless-constructor
        // "no-warning-comments": "warn",
        "prefer-spread": "warn",
        "quotes": [
          "error",
          "single",
          {
            "avoidEscape": true
          }
        ],
        // "quote-props": [
        //   "error",
        //   "consistent"
        // ],
        "sort-imports": [
          "warn",
          {
            "ignoreCase": true,
            "ignoreDeclarationSort": true,
            "allowSeparatedGroups": true
          }
        ]
      }
    },
    {
      "files": [
        "*.html"
      ],
      "extends": [
        "plugin:@angular-eslint/template/recommended"
      ],
      "rules": {
      }
    }
  ]
}
