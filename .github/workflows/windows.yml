name: 'Windows Build'

on:
  push:
    tags:
      - "v*.*"
  #   branches:
  #     - github-workflows
  # pull_request:
  #   branches:
  #     - main

  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    strategy:
      matrix:
        node-version: [16]

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Cache node modules
      uses: actions/cache@v3
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm`
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: npm i

    - name: Check lint
      run: npm run lint

# TODO: uncomment when tests are fixed
    # - name: Run headless unit test
    #   run: npm run test

    # - name: Run headless e2e test
    #   run: npm run e2e

    - name: Get current tag
      id: get-tag
      uses: dawidd6/action-get-tag@v1
      with:
        strip_v: true

    - name: Compile the app
      run: npm run build:prod

    - name: Build the app
      run: electron-builder build --publish=never -c.nsis.artifactName="${productName}-setup.${{steps.get-tag.outputs.tag}}.${ext}"

    - name: Upload windows installer
      uses: actions/upload-artifact@v3
      with:
        name: windows-installer
        path: ./release/${productName}-setup.${{steps.get-tag.outputs.tag}}.${ext}
