{
  "appId": "com.secondbounce.divan",
  "artifactName": "${productName}.${ext}",
  "asar": true,
  "directories": {
    "output": "release/"
  },
  "files": [
    "**/*",
    "!**/*.{map,ts}",
    "!package.json",
    "!package-lock.json",
    "!**/.unused{/*}",
    {
      "from": "../dist",
      "filter": ["**/*"]
    }
  ],
  "win": {
    "icon": "dist/assets/icons",
    "target": [
      "portable",
      "nsis"
    ]
  },
  "nsis": {
    "artifactName": "${productName}-setup.${ext}"
    // publish - The publish options.

    // oneClick = true Boolean - Whether to create one-click installer or assisted.
    // perMachine = false Boolean - Whether to show install mode installer page (choice per-machine or per-user) for assisted installer. Or whether installation always per all users (per-machine).
    //   If oneClick is true (default): Whether to install per all users (per-machine).
    //   If oneClick is false and perMachine is true: no install mode installer page, always install per-machine.
    //   If oneClick is false and perMachine is false (default): install mode installer page.
    // allowElevation = true Boolean - assisted installer only. Allow requesting for elevation. If false, user will have to restart installer with elevated permissions.
    // allowToChangeInstallationDirectory = false Boolean - assisted installer only. Whether to allow user to change installation directory.
    // removeDefaultUninstallWelcomePage = false Boolean - assisted installer only. remove the default uninstall welcome page.

    // installerIcon String | “undefined” - The path to installer icon, relative to the build resources or to the project directory. Defaults to build/installerIcon.ico or application icon.
    // uninstallerIcon String | “undefined” - The path to uninstaller icon, relative to the build resources or to the project directory. Defaults to build/uninstallerIcon.ico or application icon.
    // installerHeader = build/installerHeader.bmp String | “undefined” - assisted installer only. MUI_HEADERIMAGE, relative to the build resources or to the project directory.
    // installerHeaderIcon String | “undefined” - one-click installer only. The path to header icon (above the progress bar), relative to the build resources or to the project directory. Defaults to build/installerHeaderIcon.ico or application icon.
    // installerSidebar String | “undefined” - assisted installer only. MUI_WELCOMEFINISHPAGE_BITMAP, relative to the build resources or to the project directory. Defaults to build/installerSidebar.bmp or ${NSISDIR}\\Contrib\\Graphics\\Wizard\\nsis3-metro.bmp. Image size 164 × 314 pixels.
    // uninstallerSidebar String | “undefined” - assisted installer only. MUI_UNWELCOMEFINISHPAGE_BITMAP, relative to the build resources or to the project directory. Defaults to installerSidebar option or build/uninstallerSidebar.bmp or build/installerSidebar.bmp or ${NSISDIR}\\Contrib\\Graphics\\Wizard\\nsis3-metro.bmp
    // uninstallDisplayName = ${productName} ${version} String - The uninstaller display name in the control panel.

    // include String | “undefined” - The path to NSIS include script to customize installer. Defaults to build/installer.nsh. See Custom NSIS script.
    // script String | “undefined” - The path to NSIS script to customize installer. Defaults to build/installer.nsi. See Custom NSIS script.
    // license String | “undefined” - The path to EULA license file. Defaults to license.txt or eula.txt (or uppercase variants). In addition to txt, rtf and html supported (don’t forget to use target="_blank" for links).
    //   Multiple license files in different languages are supported — use lang postfix (e.g. _de, _ru). For example, create files license_de.txt and license_en.txt in the build resources. If OS language is german, license_de.txt will be displayed. See map of language code to name.
    //   Appropriate license file will be selected by user OS language.
    // artifactName String | “undefined” - The artifact file name template. Defaults to ${productName} Setup ${version}.${ext}.
    // deleteAppDataOnUninstall = false Boolean - one-click installer only. Whether to delete app data on uninstall.

    // displayLanguageSelector = false Boolean - Whether to display a language selection dialog. Not recommended (by default will be detected using OS language).
    // installerLanguages Array<String> | String | “undefined” - The installer languages (e.g. en_US, de_DE). Change only if you understand what do you do and for what.
    // language String | “undefined” - LCID Dec, defaults to 1033(English - United States).
    // multiLanguageInstaller Boolean - Whether to create multi-language installer. Defaults to unicode option value.
    // packElevateHelper = true Boolean - Whether to pack the elevate executable (required for electron-updater if per-machine installer used or can be used in the future). Ignored if perMachine is set to true.
    // preCompressedFileExtensions = [".avi", ".mov", ".m4v", ".mp4", ".m4p", ".qt", ".mkv", ".webm", ".vmdk"] Array<String> | String | “undefined” - The file extension of files that will be not compressed. Applicable only for extraResources and extraFiles files.
    // unicode = true Boolean - Whether to create Unicode installer.
    // guid String | “undefined” - See GUID vs Application Name.
    // warningsAsErrors = true Boolean - If warningsAsErrors is true (default): NSIS will treat warnings as errors. If warningsAsErrors is false: NSIS will allow warnings.
    // customNsisBinary module:app-builder-lib/out/targets/nsis/nsisOptions.CustomNsisBinary | “undefined” - Allows you to provide your own makensis, such as one with support for debug logging via LogSet and LogText. (Logging also requires option debugLogging = true)
    // runAfterFinish = true Boolean - Whether to run the installed application after finish. For assisted installer corresponding checkbox will be removed.

    // createDesktopShortcut = true Boolean | “always” - Whether to create desktop shortcut. Set to always if to recreate also on reinstall (even if removed by user).
    // createStartMenuShortcut = true Boolean - Whether to create start menu shortcut.
    // menuCategory = false Boolean | String - Whether to create submenu for start menu shortcut and program files directory. If true, company name will be used. Or string value.
    // shortcutName String | “undefined” - The name that will be used for all shortcuts. Defaults to the application name.
  },
  "portable": {
    "splashImage": "dist/assets/icons/electron.bmp"
  },
  "mac": {
    "icon": "dist/assets/icons",
    "target": [
      "dmg"
    ]
  },
  "linux": {
    "icon": "dist/assets/icons",
    "target": [
      "AppImage"
    ]
  }
}
